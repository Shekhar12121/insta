{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/dialog-box.html","./src/app/picture/picture.component.ts","./src/app/picture/picture.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path : '', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'insta';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent, DialogBox } from './login/login.component';\nimport { FormsModule }   from '@angular/forms';\nimport  { HttpClientModule } from '@angular/common/http';\nimport { PictureComponent } from './picture/picture.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatButtonModule} from '@angular/material/button'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PictureComponent,\n    DialogBox\n  ],\n  imports: [\n    BrowserModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    AppRoutingModule,\n    MatButtonModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  entryComponents: [DialogBox],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  changeClass: boolean = true;\n\n  constructor(private http: HttpClient, public dialog: MatDialog) {}\n public user = {};\n  displayFlag: boolean = false;\n  ngOnInit(): void {\n    localStorage.clear();\n  }\n\n  logForm() {\n    console.log(\"dd\", this.user);\n    console.log(localStorage.getItem(\"dataSource\"))\n\n    if (localStorage.getItem(\"dataSource\")) {\n      this.callApi('no');\n    } else {\n      localStorage.setItem(\"dataSource\", this.user[\"username\"]);\n      this.openDialog(this.user);\n      this.callApi('yes');\n    }\n  }\n\n  callApi(flagName) {\n    console.log(flagName);\n    flagName == 'yes' ? this.displayFlag = false : this.displayFlag = true;\n    console.log('displayFlag', this.displayFlag);\n\n    this.http.post(\"/dataSend\", this.user).subscribe(\n      res => {\n        this.user = {};\n        console.log(\"hh\", res);\n      },\n      err => {\n        this.user = {};\n        console.log(\"err\", err)\n      }\n    );\n  }\n\n  openDialog(data): void {\n    const dialogRef = this.dialog.open(DialogBox, {\n      width: \"250px\",\n      data: { name: data.username }\n    });\n  }\n}\n\n@Component({\n  selector: \"dialog-box\",\n  templateUrl: \"dialog-box.html\"\n})\nexport class DialogBox{\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogBox>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div [hidden] = \"displayFlag\">\n  <form #f=\"ngForm\" (ngSubmit)=\"logForm()\">\n    <div class=\"all container\">\n        <div class=\"instagram row\">\n            <div  class=\"m-auto\">\n                <p class=\"m-0\">\n                    English (United States)^\n                </p>\n            </div>\n            <div class=\"logo\">\n                <img src=\"assets/inLogo.png\"\n                    alt=\"\" />\n            </div>\n            <div class=\"inputlar\">\n                <div class=\"col-sm mb-2\">\n                    <input #userName type=\"text\" placeholder=\"Phone number, username, or email\"\n                        name=\"username\" [(ngModel)] = \"user['username']\" required/>\n                </div>\n                <div class=\"col-sm\">\n                    <input type=\"Password\" placeholder=\"password\" name=\"userpass\"\n                    [(ngModel)] = \"user['userpass']\" required/>\n                </div>\n\n            </div>\n\n            <div class=\"buttons\">\n                <button [ngClass]=\"{'low-opac': !f.form.valid}\" [disabled]=\"!f.form.valid\" type=\"submit\">Log In</button>\n             </div> <!-- button end here -->\n\n\n            <!-- <h1 mat-dialog-title>Hi {{userName.value}}</h1>\n            <div mat-dialog-content>\n              <p>What's your favorite animal?</p>\n              <mat-form-field>\n                <mat-label>Favorite Animal</mat-label>\n                <input matInput [(ngModel)]=\"userName.value\">\n              </mat-form-field>\n            </div> -->\n\n\n\n             <div class=\"m-auto\">\n                <small>Forget your login details?</small> <span> get help sign In</span>\n\n             </div>\n             <div class=\"m-auto\">\n                <small> Log in with Facebook</small>\n             </div>\n<!--\n             <div>\n                <span class=\"oryantal\"></span>OR<span class=\"oryantal\"></span>\n             </div>\n\n\n            <div class=\"kayit\">\n                Don't have an account? <a href=\"#\"> Sign up</a>\n            </div> -->\n            <div class=\"oryantal\"></div>\n            <div class=\"d-block m-auto mb-4 w-100\">from</div>\n            <div class=\"l-space m-auto\">Facebook</div>\n        </div>\n    </div>\n\n</form>\n</div>\n\n\n<app-picture [hidden]=\"!displayFlag\"></app-picture>\n","<p class=\"mb-0 m-auto text-center lhp\" mat-dialog-title>Incorrect password for {{data.name}}</p>\n<div mat-dialog-content>\n  <small><span>The password you entered is incorrect. Please try again.</span></small>\n</div>\n<mat-divider></mat-divider>\n<div mat-dialog-actions>\n  <button class=\"m-auto\" mat-button (click)=\"onNoClick()\">Try Again</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-picture',\n  templateUrl: './picture.component.html',\n  styleUrls: ['./picture.component.css']\n})\nexport class PictureComponent implements OnInit {\n  activeKardo:boolean;\n  name = 'Angular 6';\n  Arr = Array; //Array type captured in a variable\n  num:number = 20;\n  product:any[]=[\n             {id:1,source:'assets/abhi1.png'},\n             {id:2,source:'assets/abhi2.png'},\n             {id:3,source:'assets/abhi3.png'},\n             {id:4,source:'assets/abhi4.png'},\n             {id:5,source:'assets/abhi5.png'},\n             {id:6,source:'assets/abhi6.png'},\n             {id:7,source:'assets/abhi7.png'},\n             {id:8,source:'assets/abhi8.png'},\n             {id:9,source:'assets/abhi9.png'},\n            ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addClassInFig(){\n         this.activeKardo = true;\n         setTimeout(()=>{\n          this.activeKardo = false;\n         },2000)\n  }\n\n}\n","<div class=\"container-fluid\">\n\n      <div class=\"row space-between v-align\" [ngClass]=\"{'active': activeKardo}\">\n          <div *ngFor=\"let item of product; let i = index\" [attr.data-index]=\"i\" class=\"snip1295 hero-btn mt-4 mb-4\"\n           (mouseenter) =\"addClassInFig()\">\n            <img class=\"col-sm-6 col-md-2 col-12\" [src]='item.source' alt=\"sample67\"/>\n            <span class='particles-circle' *ngFor=\"let item of Arr(num).fill(1)\"></span>\n            <div class=\"border one\">\n              <div></div>\n            </div>\n            <div class=\"border two\">\n              <div></div>\n            </div>\n         </div>\n\n\n\n        <!-- <div class='v-align'>\n          <div class='hero-btn'>\n            <button class='btn'>\n              Click\n            </button>\n\n          </div>\n        </div> -->\n\n\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}